#
#
#

test driver-init-0.1-chrome "Load chrome driver" {!webConnected && chromeDriver} {
    package require selenium::chrome
 #  set driver [::selenium::ChromeDriver new]
    set driver [::selenium::ChromeDriver new -browser_args {-headless -test-type}]
    testConstraint webConnected 1
} {1}

test driver-init-0.2-gecko "Load gecko driver" {!webConnected && geckoDriver} {
    package require selenium::firefox
    set driver [::selenium::FirefoxDriver new -use_geckodriver 1]
    testConstraint webConnected 1
} {1}

test driver-init-0.3-opera "Load opera driver" {!webConnected && operaDriver} {
    package require selenium::opera
    set driver [::selenium::OperaDriver new]
    testConstraint webConnected 1
} {1}

test driver-init-0.4-phantomjs "Load phantomjs driver" {!webConnected && phantomjsDriver} {
    package require selenium::phantomjs
    set driver [::selenium::PhantomJSdriver new]
    testConstraint webConnected 1
} {1}

set seleniumbrowsers {}
set seleniumport ""
set seleniumpid ""

test driver-init-0.5-htmlunit "Load htmlunit driver" {!webConnected && htmlunitDriver} {
    package require selenium::utils::port
    set seleniumport [::selenium::utils::port::get_free_port]
    set seleniumpid [exec $::test::javaExecutable {*}$::test::htmlunitLauncher -port $seleniumport &]
    if {![::selenium::utils::port::wait_until_connectable $seleniumport]} {
        error "Can not connect to the Selenium"
    }
    set driver [::selenium::WebDriver new http://127.0.0.1:$seleniumport/wd/hub $::selenium::DesiredCapabilities(HTMLUNITWITHJS)]
    testConstraint seleniumStarted 1
    testConstraint webConnected 1
} {1}

test driver-init-0.6.0-selenium3 "Start selenium" {!webConnected && seleniumDriver} {
    package require selenium::utils::port
    set seleniumport [::selenium::utils::port::get_free_port]
    set seleniumpid [exec $::test::javaExecutable {*}$::test::seleniumLauncher -port $seleniumport &]
    if {![::selenium::utils::port::wait_until_connectable $seleniumport]} {
        error "Can not connect to the Selenium"
    }
    testConstraint seleniumStarted 1
} {1}

test driver-init-0.6.1-selenium4 "Start selenium" {!webConnected && selenium4Driver} {
    package require selenium::utils::port
    set seleniumport [::selenium::utils::port::get_free_port]
    set seleniumpid [exec $::test::javaExecutable {*}$::test::selenium4Launcher --port $seleniumport &]
    if {![::selenium::utils::port::wait_until_connectable $seleniumport]} {
        error "Can not connect to the Selenium"
    }
    testConstraint seleniumStarted 1
} {1}

test driver-init-0.6.2-selenium "Check selenium browsers" {!webConnected && seleniumStarted && seleniumBrowsers} {
    set seleniumbrowsers {}
    foreach browser [lsort [array names ::selenium::DesiredCapabilities]] {
        if {[catch {::selenium::WebDriver new http://127.0.0.1:$seleniumport/wd/hub $::selenium::DesiredCapabilities($browser)} result]} {
#           puts "$browser: $result"
            puts [list $browser: [regexp -inline {browser message: [^\{\n]*} $result]]
        } else {
            puts [list $browser: [$result name] [$result current_capabilities]]
            lappend seleniumbrowsers $browser
            $result quit
            $result destroy
        }
    }
    unset -nocomplain result browser
    set seleniumbrowsers
} [lsort [array names ::selenium::DesiredCapabilities]]

test driver-init-0.6.3-selenium "Load selenium driver" {!webConnected && seleniumStarted} {
#   set caps {browserName firefox}
    set caps {browserName chrome}
#   set caps {browserName operablink}    
#   set caps {browserName {internet explorer}}
    set driver [::selenium::WebDriver new http://127.0.0.1:$seleniumport/wd/hub $caps]
    unset caps
} {}

test driver-init-0.7-iexplore "Load iexplore driver" {!webConnected && ieDriver} {
    package require selenium::ie
    set driver [::selenium::IEDriver new]
    testConstraint webConnected 1
} {1}

test driver-caps-1.0 "Test current capabilities" webConnected {
    set caps [$driver current_capabilities]
#   puts [list driver-caps $caps]
    foreach c {handlesAlerts cssSelectorsEnabled javascriptEnabled} {
        catch {dict get $caps $c} result
        puts "capability $c: $result"
    }
    puts "parameter w3c_compliant: [$driver w3c_compliant]"
    unset c caps
} {}

test driver-finit-99.90 {unload driver} webConnected {
    $driver quit
    $driver destroy
    unset driver
    testConstraint webConnected 0
} {0}

test driver-finit-99.91 {unload driver} seleniumStarted {
    eval {
        package require http
        package require selenium::utils::process
        ::http::geturl "http://127.0.0.1:$seleniumport/shutdown"
        ::selenium::utils::port::wait_until_connectable $seleniumport 10
        after 10
        ::selenium::utils::process::kill $seleniumpid
    }
    testConstraint seleniumStarted 0
} {0}

unset seleniumbrowsers seleniumport seleniumpid

cleanupTests
